<?php

namespace ServiceApresVenteBundle\Repository;

use EmployeBundle\Entity\Employe;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
use Symfony\Component\Serializer\Serializer;

/**
 * RatingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RatingRepository extends \Doctrine\ORM\EntityRepository
{
      public function getNbrRating(){

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('count(f.value)');
        $qb->from('ServiceApresVenteBundle:Rating','f');

        $count = $qb->getQuery()->getSingleScalarResult();
        return $count;


    }


    public function modifierRateLivreur($newRate,$id) {
        $qb = $this->_em->createQueryBuilder();

        $q = $qb->update('ServiceApresVenteBundle:Rating', 'r')
            //update DemandeSponsoring p set p.etat=1 where p.id=$id
            //
            ->set('r.value', '?1')
            ->where('r.livreur = ?2')
            ->setParameter(1, $newRate)
            ->setParameter(2, $id)
            ->getQuery();
        return $q->getScalarResult();

    }
    public function getLivreurTopNotez() {

        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb->select("IDENTITY(e.livreur)")
            ->from('ServiceApresVenteBundle:Rating','e')
            ->distinct('e.livreur')
            ->orderBy('e.value','DESC')
            ->setMaxResults(3);
        $q = $qb->getQuery();
        return $q->execute();
    }
    public function getLivreurNotez() {

        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb->select("IDENTITY(e.livreur)")
            ->from('ServiceApresVenteBundle:Rating','e')
            ->distinct('e.livreur');
        $q = $qb->getQuery();
        return $q->execute();
    }














//    public function getFeedbackByUser($id_feedback){
//        return $this->getEntityManager()
//            ->createQuery(
//                "SELECT f, u.username
//       FROM ServicesApresVenteBundle:Feedback
//       JOIN c.user u
//       WHERE c.feedback = :id"
//            )
//            ->setParameter('id', $id_feedback)
//            ->getArrayResult();
//    }

//    public function getFeedbackById() {
//        $query = $this->getEntityManager()
//            ->createQuery(
//            'SELECT p
//       FROM ServicesApresVenteBundle:Feedback  f'
//
//        );
//
//        $products = $query->getResult();
//        return $query;
//    }

}
